---
- hosts: all
  vars:
    tmux_tpm_plugins_path: '{{ansible_env.HOME}}/.local/share/tmux/plugins'
    nodejs_version: "8.x"
    nodejs_npm_global_packages:
      - name: apidoc
        version: '^0.17.6'
      - name: eslint
        version: '^5.9.0'
        # Converts from Jira to Markdown and back
      - name: j2m
        version: '^1.1.0'
        # Test runner for some open source projects
        #- name: jest
        #- version: 18.1.0
      - name: js-beautify
        version: '^1.7.5'
        # Generates JavaScript tags for use by Tern
        # - name: jsctags # Seems broken now.
        # Provides 'generate-md'. Ref: https://github.com/mixu/markdown-styles/blob/master/readme.md
      - name: markdown-styles
        version: '^3.1.9'
      - name: serverless
        # Used for some AWS Lambda functions
        version: '^1.34.1'
       # Add 'git-recent' command to see recent branches. https://github.com/paulirish/git-recent
      - name: git-recent
        version: 'latest'
      # "n" package manager is much simpler and less error-prone than nvm!
      - name: n
        version: '2.1.12'
    pip_install_packages:
      # Used for AWS automation
      - name: awscli
      # For NeoVim support, we need Python support both Python 2 and Python 3
      - name: pynvim
      - name: neovim
        executable: pip3
       # My favorite Markdown previewer for Vim
      - name: moo
        version: "0.5.5"

  roles:
    # Install powerline fonts in ~/.local/share/fonts
    # Fonts include: Roboto Mono, Source Code Pro, DejaVu Sans Mono, and Ubuntu Mono
    # Installs "fontconfig" as a dependency
    - suzuki-shunsuke.tmux-tpm
    - ansible-powerline-fonts
    # Install Node.js based on nodejs_version above.
    - role: geerlingguy.nodejs
      become: true
      become_user: root
    # Install Github "hub" tool from: https://github.com/github/hub
    - role: gantsign.hub
      become: true
      become_user: root
    # Install Yarn
    - role: Oefenweb.yarn
      become: true
      become_user: root
    # For Python's Pip.Works with pip_install_packages above
    - role: geerlingguy.pip
      become: true
      become_user: root
    # Install powerline
    - role: mjanser.powerline
      become: true
      become_user: root
    - role: nickjj.docker
      become: true
      tags: ["docker"]

  tasks:
    - name: Install packages as root
      become: true
      become_user: root
      tags: ["packages"]
      block:
        - name: Add fish key
          tags: fish
          apt_key:
            url: "https://download.opensuse.org/repositories/shells:fish:release:3/Debian_9.0/Release.key"
            state: present

        - name: Add fish repo
          tags: fish
          apt_repository:
            repo: "deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_9.0/ /"
            filename: fish

        - name: Download chezmoi
          tags: chezmoi
          get_url:
            url="https://github.com/twpayne/chezmoi/releases/download/v1.5.9/chezmoi_1.5.9-1002_linux_amd64.deb"
            dest="/tmp/chezmoi-1.5.9-amd64.deb"

        - name: Install chezmoi
          tags: chezmoi
          apt: deb="/tmp/chezmoi-1.5.9-amd64.deb"

        - name: Add MongoDB Key
          apt_key:
            keyserver: keyserver.ubuntu.com
            id: 0C49F3730359A14518585931BC711F9BA15703C6

        # This fails on Debian stretch. Just use 'apt install neovim' there or install the Flatpak
        #        - apt_repository:
        #            repo: ppa:neovim-ppa/stable
        #            filename: neovim

        - apt_repository:
            repo: "deb https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse"
            filename: mongodb

        # TODO: Automate Oh-my-Fish install (and bobthefish theme)
        # This might help: https://github.com/oscpe262/ansible-role-fish/blob/master/tasks/main.yml

        - name: install packages
          apt:
            update_cache: yes
            autoclean: yes
            autoremove: yes
            pkg:
            - fish-common
            - fish=3.0*
              # Used by deoplete for Vim.
            - python3-pip
            # Note that vim is really Neovim here, which is highly compatible (Using Flatpak on Debian)
            # - neovim
            - tmux
            # xpanes is useful when SSHing to multiple hosts in parallel (Doesn't work on Debian.
            #- tmux-xpanes
            # Installs "ag" binary. Like grep, but faster and code-aware:
            # https://geoff.greer.fm/ag://geoff.greer.fm/ag/
            - silversearcher-ag
            # Integrates with Vim to index headings, functions, etc in code files
            - exuberant-ctags
            - git
            # Tig is an ncurses GUI for git
            - tig
            # jq is a command line JSON parser. https://stedolan.github.io/jq/
            - jq
            # Provides the awesome "http" CLI for simple, raw HTTP request testing.
            # https://httpie.org/
            - httpie
            # User-friendly alternative to "top".
            - htop
            # For 'locate'. Not installed by default in stripped down Debian container.
            - mlocate
            # Just the MongoDB client for. Expecting the server to be in a Docker container.
            - mongodb-org-shell
            # Provide the "convert" binary
            - imagemagick
            # For SSH keychain management
            - keychain
            # For CLI access to X11 clipboard. (desktop only)
            - xclip
            # For moo
            - libffi-dev

        - name: "Check if FPP exists"
          tags: fpp
          stat:
            path: /usr/bin/fpp
          register: fpp_exists

        - name: "Install FPP, the File Path Picker"
          tags: fpp
          when: fpp_exists.stat.exists == False
          shell: >
            git clone https://github.com/facebook/PathPicker.git /tmp/fpp
            && cd /tmp/fpp
            && sed -i 's/PYTHONCMD="python"/PYTHONCMD="python3"/' fpp
            && cd ./debian
            && ./package.sh
            &&  dpkg -i ../fpp*.deb


# END root tasks, start local installs

    # Install vim-plug for Neovim (as local user, not root)
    - name: Make "~/.local/share/nvim/site/autoload" directory
      file: path="~/.local/share/nvim/site/autoload" state=directory

    - name: Install vim-plug
      get_url:
        url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        dest: "~/.local/share/nvim/site/autoload/plug.vim"
        force: yes

    - name: Install vim plugins
      command: vim "+silent! PlugInstall!" +qall!
      tags: plugins

    # Skipping for now.
    # - name: umse nvim for vi
    #   alternatives: name=vi path=/usr/bin/nvim
    # - name: use nvim for vim
    #   alternatives: name=vim path=/usr/bin/nvim
    # - name: use nvim for editor
    #   alternatives: name=editor path=/usr/bin/nvim

    - name: Install JellyBeans-14pt profile to gnome-terminal
      shell: dconf load /org/gnome/terminal/legacy/profiles:/:6be9e43b-a6bd-4dea-a7bc-f2fbdaf6b0f2/ <./gnome-terminal-profile.dconf

    - name: Add new profile to profile list (destroying existing entries)
      shell: dconf write /org/gnome/terminal/legacy/profiles:/list "['6be9e43b-a6bd-4dea-a7bc-f2fbdaf6b0f2']"

    - name: Check if .fzf exists
      stat:
        path: ~/.fzf
      register: fzf_exists
 
    - name: "Install FZF"
      shell: git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install
      when: fzf_exists.stat.exists == False

    - name: Install vim plugins
      command: nvim "+silent! PlugInstall!" +qall!
      tags: plugins


# Install NeoVim via AppImage
# symlink /etc/alternatives/vim to AppImage/NeoVim
# TODO: Check that powerline-daemon is running.
# TODO: automate gnome-terminal preferences setup?
# TODO: Install alacritty (create new Ansible role for this?)
#   https://github.com/jwilm/alacritty/blob/master/INSTALL.md#debianubuntu
#   https://github.com/abaez/ansible-role-rustup
# TODO: Install Mongo Hacker
# TODO: todo.sh and TMSA extension
# TODO: Try diff-so-fancy for Git: https://github.com/so-fancy/diff-so-fancy/
# TODO: add keychain.
# TODO: If neovim is installed from Flatpak (whick works on Debian and Ubuntu):
#    ln -s ~/.config/nvim/init.vim ~/.var/app/io.neovim.nvim/config/nvim
# # TODO Install lpass
